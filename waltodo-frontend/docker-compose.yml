version: '3.8'

services:
  # Next.js application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_SUI_NETWORK=${NEXT_PUBLIC_SUI_NETWORK:-mainnet}
        - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-https://waltodo.app}
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-https://api.waltodo.app}
    container_name: waltodo-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    env_file:
      - .env.production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/monitoring/health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - waltodo-network
    volumes:
      - nextjs-cache:/app/.next/cache

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: waltodo-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx-cache:/var/cache/nginx
      - ./public:/var/www/waltodo/public:ro
      - ./.next/static:/var/www/waltodo/.next/static:ro
    depends_on:
      - app
    networks:
      - waltodo-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: waltodo-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - waltodo-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

networks:
  waltodo-network:
    driver: bridge

volumes:
  nextjs-cache:
  nginx-cache:
  redis-data:
# Optimized Nginx configuration for WalTodo mock services
# Provides better performance and health check endpoints

server {
    listen 80;
    server_name localhost;
    
    # Basic security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    
    # Gzip compression for better performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml;
    
    # Cache static assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
        expires 1h;
        add_header Cache-Control "public, immutable";
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
    
    # Mock Sui RPC endpoints
    location /rpc {
        add_header Content-Type application/json;
        return 200 '{"jsonrpc":"2.0","id":1,"result":{"status":"ok","mockService":"sui"}}';
    }
    
    location /sui/rpc {
        add_header Content-Type application/json;
        return 200 '{"jsonrpc":"2.0","id":1,"result":{"chainId":"sui:testnet","status":"active"}}';
    }
    
    # Mock Walrus storage endpoints
    location /store {
        add_header Content-Type application/json;
        return 200 '{"blobId":"mock-blob-id","status":"stored","size":1024}';
    }
    
    location /retrieve {
        add_header Content-Type application/json;
        return 200 '{"data":"mock-data","status":"retrieved","blobId":"mock-blob-id"}';
    }
    
    # Mock blockchain transaction endpoints
    location /tx {
        add_header Content-Type application/json;
        return 200 '{"transactionDigest":"mock-tx-digest","status":"success","effects":{"status":"success"}}';
    }
    
    # Default location for static files
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ =404;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    # Logging configuration
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;
}
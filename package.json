{
  "name": "waltodo",
  "version": "1.0.0",
  "description": "A CLI todo application using Sui blockchain and Walrus storage",
  "main": "dist/src/index.js",
  "type": "commonjs",
  "bin": {
    "waltodo": "bin/waltodo"
  },
  "scripts": {
    "prestart": "node scripts/fix-permissions.js",
    "build": "node scripts/enhanced-run-build.js",
    "build:dev": "node scripts/enhanced-run-build.js --mode=dev",
    "build:check": "node scripts/enhanced-run-build.js --type-check",
    "build:clean": "node scripts/enhanced-run-build.js --clean",
    "build:verbose": "node scripts/enhanced-run-build.js --verbose",
    "build-legacy": "tsc --skipLibCheck",
    "build-force-legacy": "tsc --skipLibCheck --noEmitOnError false",
    "start": "node bin/run.js",
    "dev": "ts-node src/index.ts",
    "clean": "node scripts/enhanced-run-build.js --mode=clean",
    "prepare": "node scripts/enhanced-run-build.js --clean --mode=dev || echo 'Build failed but continuing...'",
    "link": "pnpm link",
    "install:global": "bash scripts/install-global.sh",
    "update:cli": "bash scripts/update-cli.sh",
    "lint:cli": "node scripts/lint-cli-commands.js",
    "lint:cli:fix": "node scripts/lint-cli-commands.js --fix",
    "fix:cli:descriptions": "node scripts/fix-command-descriptions.js",
    "check:cli": "node scripts/check-cli.js",
    "check:cli:all": "node scripts/lint-cli-commands.js && node scripts/fix-command-descriptions.js && node scripts/check-cli.js",
    "fix:permissions": "node scripts/fix-permissions.js",
    "test": "jest --no-typecheck",
    "test:unit": "jest --no-typecheck tests/unit",
    "test:commands": "jest --no-typecheck tests/commands",
    "test:integration": "jest --no-typecheck tests/integration",
    "test:stress": "jest --no-typecheck tests/stress",
    "test:security": "jest --no-typecheck --config=tests/security/jest.config.js",
    "test:security:credential": "jest --no-typecheck tests/security/SecureCredentialStorage.test.ts",
    "test:security:input": "jest --no-typecheck tests/security/InputValidationSecurity.test.ts",
    "test:security:permission": "jest --no-typecheck tests/security/PermissionSecurity.test.ts",
    "test:security:audit": "jest --no-typecheck tests/security/AuditLogVerification.test.ts",
    "test:security:blockchain": "jest --no-typecheck tests/security/BlockchainVerification.test.ts",
    "test:security:api": "jest --no-typecheck tests/security/APISecurity.test.ts",
    "test:security:privacy": "jest --no-typecheck tests/security/DataPrivacy.test.ts",
    "test:all": "jest --no-typecheck",
    "test:e2e": "jest --config=tests/e2e/jest.config.js",
    "lint": "eslint . --ext .ts,.js",
    "lint:fix": "eslint . --ext .ts,.js --fix",
    "test:coverage": "jest --coverage",
    "test:coverage:badge": "jest --coverage && node scripts/generate-coverage-badge.js",
    "pretest": "pnpm run build:dev",
    "pretest:coverage": "pnpm run build",
    "test:ci": "bash ./scripts/test-ci.sh",
    "test:report": "ts-node scripts/aggregate-test-reports.ts",
    "test:report:all": "ts-node scripts/aggregate-test-reports.ts --run-tests",
    "test:report:html": "ts-node scripts/aggregate-test-reports.ts --format=html",
    "test:report:ci": "ts-node scripts/aggregate-test-reports.ts --format=text",
    "security-audit:full": "pnpm run test:security",
    "security-audit:report": "pnpm run test:security --coverage && node scripts/generate-security-report.js",
    "postinstall": "node scripts/fix-permissions.js && node scripts/enhanced-run-build.js --manifest-only",
    "upload-image": "ts-node scripts/upload-default-image.ts",
    "manifest": "node scripts/enhanced-run-build.js --manifest-only",
    "postbuild": "node scripts/enhanced-run-build.js --manifest-only",
    "local-install": "mkdir -p ~/.local/bin && pnpm pack && tar -xzf waltodo-1.0.0.tgz && cp -r package/bin/* ~/.local/bin/ && chmod +x ~/.local/bin/waltodo && rm -rf package waltodo-1.0.0.tgz",
    "typecheck": "tsc --noEmit",
    "stress-test": "ts-node tests/stress/run-stress-tests.ts",
    "stress-test:simulated": "ts-node tests/stress/run-stress-tests.ts --mode simulated",
    "stress-test:real": "ts-node tests/stress/run-stress-tests.ts --mode real",
    "stress-test:report": "ts-node tests/stress/run-stress-tests.ts --report-dir ./stress-test-reports",
    "security-audit": "pnpm run test:security",
    "test:fuzz:network-retry": "jest tests/fuzz/network-retry-fuzzer.test.ts --verbose",
    "test:e2e:watch": "jest --config=tests/e2e/jest.config.js --watch",
    "test:e2e:coverage": "jest --config=tests/e2e/jest.config.js --coverage",
    "test:cleanup": "ts-node tests/testnet/cleanup.ts",
    "test:cleanup:dry": "ts-node tests/testnet/cleanup.ts --dry-run",
    "test:cleanup:network": "ts-node tests/testnet/cleanup.ts --network",
    "posttest": "ts-node tests/testnet/cleanup.ts --dry-run",
    "frontend": "cd frontend-demo && open index.html",
    "frontend:dashboard": "cd frontend-demo && open dashboard.html",
    "frontend:nft": "cd frontend-demo && open nft-todos.html",
    "web": "cd frontend-demo && open index.html",
    "web:dashboard": "cd frontend-demo && open dashboard.html",
    "web:nft": "cd frontend-demo && open nft-todos.html",
    "web:setup": "echo 'No setup needed for static HTML demo. Simply use pnpm run web'",
    "nextjs": "cd waltodo-frontend && pnpm dev",
    "nextjs:build": "cd waltodo-frontend && pnpm build",
    "nextjs:start": "cd waltodo-frontend && pnpm start",
    "nextjs:install": "cd waltodo-frontend && pnpm install",
    "config:generate": "pnpm run build:dev && ./bin/waltodo generate-frontend-config",
    "config:validate": "pnpm run build:dev && ./bin/waltodo validate-config",
    "config:validate:detailed": "pnpm run build:dev && ./bin/waltodo validate-config --detailed",
    "build:all": "pnpm run build && pnpm run nextjs:build",
    "api:start": "node dist/src/api/start-server.js",
    "api:dev": "ts-node src/api/start-server.ts",
    "api:start:port": "node dist/src/api/start-server.js --port="
  },
  "keywords": [
    "cli",
    "todo",
    "sui",
    "blockchain",
    "walrus"
  ],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@inquirer/prompts": "^3.3.0",
    "@langchain/core": "^0.3.55",
    "@langchain/xai": "^0.0.2",
    "@mysten/sui": "^1.30.1",
    "@mysten/walrus": "0.1.1",
    "@oclif/core": "^3.25.2",
    "@smithery/cli": "^1.1.84",
    "@types/jsonwebtoken": "^9.0.9",
    "@types/uuid": "^10.0.0",
    "axios": "^1.9.0",
    "chalk": "^4.1.2",
    "cli-progress": "^3.12.0",
    "compression": "^1.7.6",
    "cors": "^2.8.5",
    "dotenv": "^16.4.5",
    "express": "^4.21.2",
    "express-rate-limit": "^7.5.0",
    "find-up": "^5.0.0",
    "form-data": "^4.0.0",
    "helmet": "^8.0.0",
    "image-size": "^2.0.2",
    "inquirer": "^9.2.15",
    "jsonwebtoken": "^9.0.2",
    "langchain": "^0.3.24",
    "node-fetch": "^3.3.2",
    "p-retry": "^6.2.1",
    "uuid": "^11.1.0",
    "zod": "^3.25.12"
  },
  "devDependencies": {
    "@babel/core": "^7.24.3",
    "@babel/preset-env": "^7.24.3",
    "@babel/preset-typescript": "^7.24.3",
    "@jest/globals": "^29.6.3",
    "@jest/test-sequencer": "^29.6.3",
    "@jest/types": "^29.6.3",
    "@oclif/test": "^3.2.15",
    "@playwright/test": "^1.52.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@types/cli-progress": "^3.11.3",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/express": "^5.0.1",
    "@types/inquirer": "^9.0.7",
    "@types/jest": "^29.5.12",
    "@types/node": "^20.11.30",
    "@types/node-fetch": "^2.6.11",
    "@types/ora": "^3.2.0",
    "@types/sinon": "^17.0.4",
    "@typescript-eslint/eslint-plugin": "^7.3.1",
    "@typescript-eslint/parser": "^7.3.1",
    "babel-jest": "^29.6.3",
    "commander": "^14.0.0",
    "csv-stringify": "^6.5.2",
    "eslint": "^8.57.1",
    "eslint-plugin-jest": "^28.11.0",
    "execa": "^7.2.0",
    "fs-extra": "^11.2.0",
    "glob": "^11.0.2",
    "jest": "^29.6.3",
    "jest-environment-node": "^29.6.3",
    "jest-extended": "^4.0.2",
    "jest-mock": "^29.7.0",
    "jest-mock-extended": "^3.0.5",
    "prettier": "^3.2.5",
    "sinon": "^17.0.1",
    "ts-jest": "^29.1.2",
    "ts-node": "^10.9.2",
    "tslib": "^2.6.2",
    "ttypescript": "^1.5.15",
    "typescript": "5.5.2",
    "typescript-transform-paths": "^3.5.5"
  },
  "files": [
    "/bin",
    "/dist",
    "/src/move",
    "/npm-shrinkwrap.json",
    "/oclif.manifest.json"
  ],
  "oclif": {
    "bin": "waltodo",
    "dirname": "waltodo",
    "commands": "./dist/src/commands",
    "plugins": [],
    "topicSeparator": ":",
    "macos": {
      "identifier": "com.waltodo.cli"
    },
    "topics": {
      "account": {
        "description": "Manage Sui accounts"
      },
      "simple": {
        "description": "Simple todo management commands"
      },
      "storage": {
        "description": "Manage Walrus storage for todos"
      },
      "ai": {
        "description": "AI-powered todo management features"
      }
    }
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "directories": {
    "doc": "docs",
    "example": "examples",
    "test": "tests"
  }
}
